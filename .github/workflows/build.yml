name: build
on:
  push:
  pull_request:
  schedule:
    - cron: '0 2 * * 5'  # Every Friday at 2am
jobs:
  build:
    name: build MB-System
    strategy:
      matrix:
        include:
          #- os: ubuntu-22.04
          #- os: ubuntu-20.04
          #- os: ubuntu-18.04
          - os: macos-12 # Monterey v12
    runs-on: "${{ matrix.os }}"
    steps:
      - uses: actions/checkout@v3
      - name: (Linux) Install build dependencies
        if: "${{ runner.os == 'Linux' }}"
        run: |-
          sudo apt-get update
          if [ "${{ matrix.os }}" = 'ubuntu-22.04' ]; then
              sudo apt-get install --yes --no-install-recommends libvtk9-dev libvtk9-qt-dev libgmock-dev
          elif [ "${{ matrix.os }}" = 'ubuntu-20.04' ]; then
              sudo apt-get install --yes --no-install-recommends libgmock-dev
          fi
          sudo apt-get install --yes --no-install-recommends \
              cmake              \
              libfftw3-dev       \
              libgdal-dev        \
              libgl1-mesa-dev    \
              libglu1-mesa-dev   \
              libgmt-dev         \
              libmotif-dev       \
              libnetcdf-dev      \
              libopencv-dev      \
              libpcl-dev         \
              libproj-dev        \
              libtirpc-dev       \
              libxt-dev          \
              qtbase5-dev        \
              qtdeclarative5-dev \
      - name: (macOS) Install build dependencies
        if: "${{ runner.os == 'macOS' }}"
        run: |-
          brew install proj gdal netcdf fftw gmt openmotif googletest
          brew install --cask xquartz
      - name: Configure CMake
        run: |-
          if [ "${{ matrix.os }}" = 'ubuntu-22.04' ]; then
             cmake -B ${{github.workspace}}/build -DbuildTRN=1 -DbuildPCL=1 -DBUILD_TESTING=1 -DbuildOpenCV=1 -DbuildQt=1
          elif [ "${{ matrix.os }}" = 'ubuntu-20.04' ]; then
             cmake -B ${{github.workspace}}/build -DbuildTRN=1 -DbuildPCL=1 -DBUILD_TESTING=1 -DbuildOpenCV=1 -DbuildQt=0
          elif [ "${{ matrix.os }}" = 'ubuntu-18.04' ]; then
             cmake -B ${{github.workspace}}/build -DbuildTRN=1 -DbuildPCL=1 -DBUILD_TESTING=0 -DbuildOpenCV=0 -DbuildQt=0
          elif [ "${{ runner.os }}" = 'macOS' ]; then
             cmake -B ${{github.workspace}}/build -DCMAKE_PREFIX_PATH:PATH=/opt/X11 -DOPENGL_opengl_LIBRARY:FILEPATH=/opt/X11/lib/libGL.dylib -DOPENGL_gl_LIBRARY:FILEPATH=/opt/X11/lib/libGL.dylib -DOPENGL_glu_LIBRARY:FILEPATH=/opt/X11/lib/libGLU.dylib -DOPENGL_INCLUDE_DIR:PATH=/opt/X11/include -DbuildTRN=1 -DbuildPCL=0 -DBUILD_TESTING=1 -DbuildOpenCV=0 -DbuildQt=0
          fi
      - name: Build
        run: cmake --build ${{github.workspace}}/build --verbose
      - name: Test
        working-directory: ${{github.workspace}}/build
        run: ctest
